version: 2.1

executors:
  node-docker:
    docker:
      - image: cimg/node:20.12

jobs:
  build-and-push:
    executor: node-docker
    parameters:
      app_dir:
        type: string
      ecr_repo:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update && sudo apt-get install -y awscli
      - run:
          name: Build Docker image
          command: |
            docker build -f << parameters.app_dir >>/Dockerfile -t $AWS_ECR_REGISTRY/<< parameters.ecr_repo >>:$CIRCLE_SHA1 .
      - run:
          name: Login to ECR
          command: |
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY
      - run:
          name: Push Docker image
          command: |
            docker push $AWS_ECR_REGISTRY/<< parameters.ecr_repo >>:$CIRCLE_SHA1
      - run:
          name: Install Kustomize
          command: |
            curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
            sudo mv kustomize /usr/local/bin/
      - run:
          name: Update GitOps Manifest
          command: |
            TAG=$CIRCLE_BUILD_NUM
            git clone https://x-access-token:$GIT_TOKEN@github.com/$GIT_OWNER/fyc-manifest.git
            cd fyc-manifest
            echo $TAG
            sed -i "s/newTag: .*/newTag: \"$TAG\"/" ./chat-ingestor/overlays/dev/kustomization.yaml
            kustomize build ./chat-ingestor/overlays/dev > dev.yaml
            git config --global user.email "$GIT_EMAIL"
            git config --global user.name "$GIT_USER_NAME"
            git add .
            git commit -m "New build with imgTag build-$TAG"
            git config credential.helper 'cache --timeout=120'
            git push origin main
      - run:
          name: Write Slack message
          command: |
            FILENAME=$(echo "<< parameters.ecr_repo >>" | tr '/' '_')
            echo "✅ *<< parameters.ecr_repo >>* : $AWS_ECR_REGISTRY/<< parameters.ecr_repo >>:$CIRCLE_SHA1 배포 완료" > /tmp/slack_message-$FILENAME.txt
      - persist_to_workspace:
          root: /tmp
          paths:
            - slack_message-*.txt

  slack-notify:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Notify Slack
          command: |
            if [ -z "$SLACK_WEBHOOK_URL" ]; then
              echo "SLACK_WEBHOOK_URL is not set"; exit 1;
            fi
            MSG=$(cat /tmp/slack_message-*.txt)
            PAYLOAD=$(jq -n --arg text "$MSG" '{text: $text}')
            curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" $SLACK_WEBHOOK_URL

workflows:
  version: 2
  build-and-push-all:
    jobs:
      - build-and-push:
          name: build-and-push-chat-ingestor
          app_dir: apps/ws-chat-ingestor
          ecr_repo: chat-ingestor/fyc-chat-ingestor
      - slack-notify:
          requires:
            - build-and-push-chat-ingestor
